
# This is a fully corrected configuration based on the standard Klipper pinout for the BTT SKR Mini E3 V3.
# It fixes major pin conflicts with TMC drivers and fans.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_5200280006504E5238363120-if00

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 5.0

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 16
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_min: 0
position_max: 355
homing_speed: 40
homing_retract_dist: 0

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 375
position_min: 0
position_max: 375
homing_speed: 40
homing_positive_dir: true
homing_retract_dist: 0

[stepper_z]
step_pin: PB0          # CORRECTED: Standard Z Step Pin
dir_pin: PC5           # CORRECTED: Standard Z Dir Pin
enable_pin: !PB1        # CORRECTED: Standard Z Enable Pin
rotation_distance: 5
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 180
position_min: -5

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
rotation_distance: 23.02
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_pin: PA0
sensor_type: PT1000
pullup_resistor: 4700
control: pid
pid_kp: 22.2
pid_ki: 1.08
pid_kd: 114.0
min_temp: 0
max_temp: 450

[heater_bed]
heater_pin: PC9
sensor_pin: PC4
sensor_type: EPCOS 100K B57560G104F
pullup_resistor: 4700
control: pid
pid_kp: 54.027
pid_ki: 0.770
pid_kd: 948.182
min_temp: 0
max_temp: 150

# --- CORRECTED TMC2209 Shared UART Bus Configuration ---
[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1.200
diag_pin: ^PC0          # CORRECTED: Added pull-up prefix
driver_SGTHRS: 100

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 1.200
diag_pin: ^PC1          # CORRECTED: Added pull-up prefix
driver_SGTHRS: 100

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 1.200

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 1.200

# --- CORRECTED Fan Configuration ---
[fan]
pin: PC6 # CORRECTED: This is the physical FAN0 port for the Part Cooling Fan

[heater_fan hotend_fan]
pin: PC7 # CORRECTED: This is the physical FAN1 port for the Hotend Fan
heater: extruder
heater_temp: 50.0

[controller_fan my_controller_fan] # ADDED: Optional fan for electronics
pin: PB15

# --- [The rest of the file is unchanged] ---

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: 10
y_offset: 2
z_offset: 0
speed: 5.0

[safe_z_home]
home_xy_position: 177.5, 187.5
speed: 100
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 25, 25
mesh_max: 325, 350
probe_count: 5,5
algorithm: bicubic
fade_start: 1.0
fade_end: 10.0

[virtual_sdcard]
path: /opt/printer_data/gcodes

[display_status]
[pause_resume]

# --- [Macros are unchanged] ---

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
